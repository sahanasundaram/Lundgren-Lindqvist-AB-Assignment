{"ast":null,"code":"const API_KEY = 'your_openweather_api_key';\nconst GEOLOCATION_URL = 'http://ip-api.com/json/';\nexport const fetchWeather = async (lat, lon) => {\n  const response = await fetch(`${GEOLOCATION_URL}?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch weather data.');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_KEY","GEOLOCATION_URL","fetchWeather","lat","lon","response","fetch","ok","Error","json"],"sources":["/Users/sahana/Documents/GitHub/Lundgren-Lindqvist-AB-Assignment/appassignment/src/utils/api.js"],"sourcesContent":["const API_KEY = 'your_openweather_api_key';\nconst GEOLOCATION_URL = 'http://ip-api.com/json/';\n\nexport const fetchWeather = async (lat, lon) => {\n  const response = await fetch(`${GEOLOCATION_URL}?lat=${lat}&lon=${lon}&units=metric&appid=${API_KEY}`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch weather data.');\n  }\n  return response.json();\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,0BAA0B;AAC1C,MAAMC,eAAe,GAAG,yBAAyB;AAEjD,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,eAAe,QAAQE,GAAG,QAAQC,GAAG,uBAAuBJ,OAAO,EAAE,CAAC;EACtG,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}